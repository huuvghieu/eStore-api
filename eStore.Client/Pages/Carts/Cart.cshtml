@page
@using Newtonsoft.Json;
@using eStore.Service.Models.RequestModels;
@model eStore.Client.Pages.Carts.CartModel
@{
}
@{
    ViewData["Title"] = "Cart";
    try
    {
        Model.CartItems = JsonConvert.DeserializeObject<List<OrderDetailRequestModel>>
        (HttpContext.Session.GetString("CART"));
    }
    catch
    {
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @TempData["ErrorMessage"]
        </div>
    }
}

<h1>Shopping Cart</h1>

@if (Model.CartItems == null || Model.CartItems.Count == 0)
{
    @if (User.IsInRole("Admin"))
    {
        <p>Your order is currently empty.</p>
    }
    else
    {
        <p>Your cart is currently empty.</p>
    }
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Product Id</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>SubTotal</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.CartItems)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.ProductId)</td>
                    <td>@Html.DisplayFor(modelItem => item.UnitPrice)</td>
                    <td>
                        <form method="post" asp-page-handler="UpdateProductQuantity">
                            <input type="hidden" name="productId" value="@item.ProductId" />
                            <div class="cart-item">
                                <span class="item-quantity">
                                    <input type="number" min="1" value="@item.Quantity" name="quantity">
                                </span>
                                <button class="btn btn-primary" type="submit">Update</button>
                            </div>
                        </form>
                    </td>
                    <td>
                        @((item.UnitPrice * item.Quantity).ToString("C"))
                    </td>
                    <td>
                        <form method="post" asp-page-handler="RemoveProduct"
                              asp-route-productId="@item.ProductId">
                            <button class="btn btn-primary" type="submit">Remove</button>
                        </form>
                    </td>

                </tr>
                Model.Total += item.UnitPrice * item.Quantity;
            }
        </tbody>
        <tfoot>
            <tr>
                <th colspan="3">Total:</th>
                <td>@Model.Total.ToString("C")</td>
                <td></td>
            </tr>
        </tfoot>
    </table>


        <form method="post" asp-page-handler="checkout">
            <button type="submit" class="btn btn-primary">checkout</button>
        </form>
   



}

@section Scripts{
    <script>
        // Gán giá trị mặc địch cho select box
        document.addEventListener("DOMContentLoaded", function () {
            var selectElement = document.getElementById("userId");
            var userIdInput = document.getElementById("userIdInput");

            // Lấy userId của phần tử đầu tiên trong select box
            var defaultUserId = selectElement.options[0].value;

            // Gán giá trị mặc địch cho hidden input
            userIdInput.value = defaultUserId;
        });

        function updateUserId() {
            var userId = document.getElementById("userId").value;
            document.getElementById("userIdInput").value = userId;
        }
    </script>
}